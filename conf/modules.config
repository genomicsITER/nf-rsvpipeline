/*
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Config file for defining DSL2 per module options and publishing paths
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Available keys to override module options:
        ext.args   = Additional arguments appended to command in module.
        ext.args2  = Second set of arguments appended to command in module (multi-tool modules).
        ext.args3  = Third set of arguments appended to command in module (multi-tool modules).
        ext.prefix = File name prefix for output files.
----------------------------------------------------------------------------------------
*/

process {

    /*
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
        Config parameters for Illumina
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    */

    publishDir = [
        path: { "${params.outdir}/${task.process.tokenize(':')[-1].tokenize('_')[0].toLowerCase()}" },
        mode: params.publish_dir_mode,
        saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
    ]

    withName: 'FASTQC_RAW' {
        ext.args = '--quiet'
        publishDir = [
            path: { "${params.outdir}/${meta.id}/01_FastQC" },
            mode: params.publish_dir_mode,
            pattern: "*.{html,zip}"
        ]
    }

    withName: 'KRAKEN2_PLUSPF' {
        publishDir = [
            path: { "${params.outdir}/${meta.id}/02_Kraken2_PlusPF" },
            mode: params.publish_dir_mode,
            pattern: "*.{txt}"
        ]
    }

    withName: 'FASTP' {
        publishDir = [
            path: { "${params.outdir}/${meta.id}/03_Adapter_trimming" },
            mode: params.publish_dir_mode,
            pattern: "*.fastp.{fastq.gz,html,json,log}"
        ]
    }

    withName: 'FASTQC_TRIM' {
        ext.args = '--quiet'
        publishDir = [
            path: { "${params.outdir}/${meta.id}/04_FastQC_trimmed" },
            mode: params.publish_dir_mode,
            pattern: "*.{html,zip}"
        ]
    }

    withName: 'KRAKEN2_HUMANDB' {
        publishDir = [
            path: { "${params.outdir}/${meta.id}/05_Remove_host_reads" },
            mode: params.publish_dir_mode,
            pattern: "*.{txt,fastq.gz}"
        ]
    }

    withName: 'BBMAP_ALIGN' {
        ext.args = "local=true interleaved=false maxindel=80"
        publishDir = [
            path: { "${params.outdir}/${meta.id}/06_Reference_selection" },
            mode: params.publish_dir_mode,
            pattern: "*.{bam,bbmap.log,covstats.tsv}"
        ]
        ext.prefix = { "${meta.id}.MSA" }
    }

    withName: 'SELECT_REFERENCE' {
        publishDir = [
            path: { "${params.outdir}/${meta.id}/06_Reference_selection" },
            mode: params.publish_dir_mode,
            pattern: "*.{tsv}"
        ]
    }

    withName: 'SPADES' {
        publishDir = [
            path: { "${params.outdir}/${meta.id}/06_Reference_selection/assembly" },
            mode: params.publish_dir_mode,
            pattern: "*.{fa.gz}"
        ]
    }

    withName: 'BLAST_BLASTN' {
        ext.args = "-remote -num_alignments 1 -outfmt \"6 stitle score bitscore qcovs\""
        publishDir = [
            path: { "${params.outdir}/${meta.id}/06_Reference_selection/assembly" },
            mode: params.publish_dir_mode,
            pattern: "*.{txt}"
        ]
    }

    withName: 'SELECT_REFERENCE_BLASTN' {
        publishDir = [
            path: { "${params.outdir}/${meta.id}/06_Reference_selection/assembly" },
            mode: params.publish_dir_mode
        ]
    }

    withName: 'BWA_INDEX' {
        publishDir = [
            path: { "${params.outdir}/${meta.id}/07_Align" },
            mode: params.publish_dir_mode,
            pattern: "*.{amb,ann,bwt,pac,sa}"
        ]
    }

    withName: 'BWA_MEM' {
        publishDir = [
            path: { "${params.outdir}/${meta.id}/07_Align" },
            mode: params.publish_dir_mode,
            pattern: "*.{bam}"
        ]
        ext.prefix = { "${meta.id}.${meta.selected_ref}" }
    }

    withName: 'SAMTOOLS_INDEX_BAM' {
        publishDir = [
            path: { "${params.outdir}/${meta.id}/07_Align" },
            mode: params.publish_dir_mode,
            pattern: "*.{bai}"
        ]
        ext.prefix = { "${meta.id}.${meta.selected_ref}" }
    }

    withName: 'SAMTOOLS_FLAGSTAT' {
        publishDir = [
            path: { "${params.outdir}/${meta.id}/07_Align" },
            mode: params.publish_dir_mode,
            pattern: "*.{flagstat}"
        ]
        ext.prefix = { "${meta.id}.${meta.selected_ref}" }
    }

    withName: 'SAMTOOLS_IDXSTATS' {
        publishDir = [
            path: { "${params.outdir}/${meta.id}/07_Align" },
            mode: params.publish_dir_mode,
            pattern: "*.{idxstats}"
        ]
        ext.prefix = { "${meta.id}.${meta.selected_ref}" }
    }

    withName: 'DISCARD_UNMAPPED_READS' {
        ext.args = "-F 0x04"
        publishDir = [
            path: { "${params.outdir}/${meta.id}/07_Align" },
            mode: params.publish_dir_mode,
            pattern: "*.{bam}"
        ]
        ext.prefix = { "${meta.id}.${meta.selected_ref}.mapped" }
    }

    withName: 'SAMTOOLS_INDEX_MAPPED_BAM' {
        publishDir = [
            path: { "${params.outdir}/${meta.id}/07_Align" },
            mode: params.publish_dir_mode,
            pattern: "*.{bai}"
        ]
        ext.prefix = { "${meta.id}.${meta.selected_ref}.mapped" }
    }

    withName: 'IVAR_TRIM' {
        ext.args = "-e"
        publishDir = [
            path: { "${params.outdir}/${meta.id}/08_Trim_adapters" },
            mode: params.publish_dir_mode,
            pattern: "*.{bam,log}"
        ]
        ext.prefix = { "${meta.id}.${meta.selected_ref}.mapped.trimmed" }
    }

    withName: 'SAMTOOLS_SORT' {
        publishDir = [
            path: { "${params.outdir}/${meta.id}/08_Trim_adapters" },
            mode: params.publish_dir_mode,
            pattern: "*.{bam}"
        ]
        ext.prefix = { "${meta.id}.${meta.selected_ref}.mapped.trimmed.sorted" }
    }

    withName: 'SAMTOOLS_INDEX_TRIMMED_BAM' {
        publishDir = [
            path: { "${params.outdir}/${meta.id}/08_Trim_adapters" },
            mode: params.publish_dir_mode,
            pattern: "*.{bai}"
        ]
        ext.prefix = { "${meta.id}.${meta.selected_ref}.mapped.trimmed.sorted" }
    }

    withName: 'SAMTOOLS_FLAGSTAT_TRIMMED' {
        publishDir = [
            path: { "${params.outdir}/${meta.id}/08_Trim_adapters" },
            mode: params.publish_dir_mode,
            pattern: "*.{flagstat}"
        ]
        ext.prefix = { "${meta.id}.${meta.selected_ref}.mapped.trimmed.sorted" }
    }

    withName: 'SAMTOOLS_IDXSTATS_TRIMMED' {
        publishDir = [
            path: { "${params.outdir}/${meta.id}/08_Trim_adapters" },
            mode: params.publish_dir_mode,
            pattern: "*.{idxstats}"
        ]
        ext.prefix = { "${meta.id}.${meta.selected_ref}.mapped.trimmed.sorted" }
    }

    withName: 'SAMTOOLS_DEPTH' {
        ext.args = "-a"
        publishDir = [
            path: { "${params.outdir}/${meta.id}/09_Coverage_analysis" },
            mode: params.publish_dir_mode,
            pattern: "*.{tsv}"
        ]
        ext.prefix = { "${meta.id}.${meta.selected_ref}.mapped.trimmed.sorted" }
    }

    withName: 'MOSDEPTH' {
        publishDir = [
            path: { "${params.outdir}/${meta.id}/09_Coverage_analysis" },
            mode: params.publish_dir_mode,
            pattern: "*.{txt,gz,csi}"
        ]
        ext.prefix = { "${meta.id}.${meta.selected_ref}.mapped.trimmed.sorted" }
    }

    withName: 'MOSDEPTH_PER_AMPLICON' {
        publishDir = [
            path: { "${params.outdir}/${meta.id}/09_Coverage_analysis" },
            mode: params.publish_dir_mode,
            pattern: "*.{txt,gz,csi}"
        ]
        ext.prefix = { "${meta.id}.${meta.selected_ref}.mapped.trimmed.sorted.all_amplicons" }
    }

    withName: 'IVAR_VARIANTS' {
        publishDir = [
            path: { "${params.outdir}/${meta.id}/10_Calling" },
            mode: params.publish_dir_mode,
            pattern: "*.{tsv,mpileup}"
        ]
        ext.prefix = { "${meta.id}.${meta.selected_ref}.ivar_calling" }
    }

    withName: 'TRANSFORM_TSV_TO_VCF' {
        publishDir = [
            path: { "${params.outdir}/${meta.id}/10_Calling" },
            mode: params.publish_dir_mode,
            pattern: "*.{vcf}"
        ]
        ext.prefix = { "${meta.id}.${meta.selected_ref}.ivar_calling" }
    }

    withName: 'IVAR_CONSENSUS' {
        ext.args = "-q ${params.min_qual_consensus} -t ${params.min_freq_threshold_consensus} -m ${params.min_depth_consensus}"
        ext.args2 = "-A -Q ${params.min_qual_mpileup}"
        publishDir = [
            path: { "${params.outdir}/${meta.id}/11_Consensus" },
            mode: params.publish_dir_mode,
            pattern: "*.{fa,txt,mpileup}"
        ]
        ext.prefix = { "${meta.id}.${meta.selected_ref}.ivar_consensus" }
    }

    /*
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
        Config parameters for Nanopore
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    */

    withName: 'PYCOQC' {
        publishDir = [
            path: { "${params.outdir}/pycoqc" },
            mode: params.publish_dir_mode,
            pattern: "*.{html,json}"
        ]
    }

    withName: 'NANOPLOT_RAW' {
        ext.args = "--verbose"
        publishDir = [
            path: { "${params.outdir}/${meta.id}/01_NanoPlot_Raw" },
            mode: params.publish_dir_mode,
            pattern: "*.{html,png,txt,log}"
        ]
    }

    withName: 'KRAKEN2_PLUSPF_ONT' {
        publishDir = [
            path: { "${params.outdir}/${meta.id}/02_Kraken2_PlusPF" },
            mode: params.publish_dir_mode,
            pattern: "*.{txt}"
        ]
    }

    withName: 'KRAKEN2_HUMANDB_ONT' {
        publishDir = [
            path: { "${params.outdir}/${meta.id}/03_Remove_host_reads" },
            mode: params.publish_dir_mode,
            pattern: "*.{txt,fastq.gz}"
        ]
    }

    withName: 'NANOPLOT_SCRUBBED' {
        ext.args = "--verbose"
        publishDir = [
            path: { "${params.outdir}/${meta.id}/04_NanoPlot_Scrubbed" },
            mode: params.publish_dir_mode,
            pattern: "*.{html,png,txt,log}"
        ]
    }

    withName: 'IRMA' {
        ext.args = "--verbose"
        publishDir = [
            path: { "${params.outdir}/${meta.id}/05_Reference_Selection" },
            mode: params.publish_dir_mode,
            pattern: "*.{fasta,vcf,bam,bai}"
        ]
        ext.prefix = { "irma" }
    }

    withName: 'SELECT_REFERENCE_ONT' {
        publishDir = [
            path: { "${params.outdir}/${meta.id}/05_Reference_Selection" },
            mode: params.publish_dir_mode
        ]
    }

    withName: 'MINIMAP2_ALIGN' {
        ext.args = "-ax map-ont"
        publishDir = [
            path: { "${params.outdir}/${meta.id}/06_Align" },
            mode: params.publish_dir_mode,
            pattern: "*.{bam,bai}"
        ]
        ext.prefix = { "${meta.id}.${meta.selected_ref}" }
    }

    withName: 'SAMTOOLS_FLAGSTAT_ONT' {
        publishDir = [
            path: { "${params.outdir}/${meta.id}/06_Align" },
            mode: params.publish_dir_mode,
            pattern: "*.{flagstat}"
        ]
        ext.prefix = { "${meta.id}.${meta.selected_ref}" }
    }

    withName: 'SAMTOOLS_IDXSTATS_ONT' {
        publishDir = [
            path: { "${params.outdir}/${meta.id}/06_Align" },
            mode: params.publish_dir_mode,
            pattern: "*.{idxstats}"
        ]
        ext.prefix = { "${meta.id}.${meta.selected_ref}" }
    }

    withName: 'DISCARD_UNMAPPED_READS_ONT' {
        ext.args = "-F 0x04"
        publishDir = [
            path: { "${params.outdir}/${meta.id}/06_Align" },
            mode: params.publish_dir_mode,
            pattern: "*.{bam}"
        ]
        ext.prefix = { "${meta.id}.${meta.selected_ref}.mapped" }
    }

    withName: 'SAMTOOLS_INDEX_MAPPED_BAM_ONT' {
        publishDir = [
            path: { "${params.outdir}/${meta.id}/06_Align" },
            mode: params.publish_dir_mode,
            pattern: "*.{bai}"
        ]
        ext.prefix = { "${meta.id}.${meta.selected_ref}.mapped" }
    }

    withName: 'ALIGN_TRIM' {
        publishDir = [
            path: { "${params.outdir}/${meta.id}/07_Trimming" },
            mode: params.publish_dir_mode,
            pattern: "*.{bam}"
        ]
        ext.prefix = { "${meta.id}.${meta.selected_ref}.mapped.trimmed" }
    }

    withName: 'SAMTOOLS_INDEX_TRIMMED_BAM_ONT' {
        publishDir = [
            path: { "${params.outdir}/${meta.id}/07_Trimming" },
            mode: params.publish_dir_mode,
            pattern: "*.{bai}"
        ]
        ext.prefix = { "${meta.id}.${meta.selected_ref}.mapped.trimmed" }
    }

    withName: 'SAMTOOLS_FLAGSTAT_TRIMMED_ONT' {
        publishDir = [
            path: { "${params.outdir}/${meta.id}/07_Trimming" },
            mode: params.publish_dir_mode,
            pattern: "*.{flagstat}"
        ]
        ext.prefix = { "${meta.id}.${meta.selected_ref}.mapped.trimmed" }
    }

    withName: 'SAMTOOLS_IDXSTATS_TRIMMED_ONT' {
        publishDir = [
            path: { "${params.outdir}/${meta.id}/07_Trimming" },
            mode: params.publish_dir_mode,
            pattern: "*.{idxstats}"
        ]
        ext.prefix = { "${meta.id}.${meta.selected_ref}.mapped.trimmed" }
    }

    withName: 'SAMTOOLS_DEPTH_ONT' {
        ext.args = "-a"
        publishDir = [
            path: { "${params.outdir}/${meta.id}/08_Coverage_analysis" },
            mode: params.publish_dir_mode,
            pattern: "*.{tsv}"
        ]
        ext.prefix = { "${meta.id}.${meta.selected_ref}.mapped.trimmed" }
    }

    withName: 'MOSDEPTH_ONT' {
        publishDir = [
            path: { "${params.outdir}/${meta.id}/08_Coverage_analysis" },
            mode: params.publish_dir_mode,
            pattern: "*.{txt,gz,csi}"
        ]
        ext.prefix = { "${meta.id}.${meta.selected_ref}.mapped.trimmed" }
    }

    withName: 'MOSDEPTH_PER_AMPLICON_ONT' {
        publishDir = [
            path: { "${params.outdir}/${meta.id}/08_Coverage_analysis" },
            mode: params.publish_dir_mode,
            pattern: "*.{txt,gz,csi}"
        ]
        ext.prefix = { "${meta.id}.${meta.selected_ref}.mapped.trimmed.all_amplicons" }
    }

    withName: 'MEDAKA_VARIANTS' {
        publishDir = [
            path: { "${params.outdir}/${meta.id}/09_Variants" },
            mode: params.publish_dir_mode,
            pattern: "*.{vcf}"
        ]
        ext.prefix = { "${meta.id}.${meta.selected_ref}.medaka" }
    }

    withName: 'MEDAKA_CONSENSUS' {
        ext.args = "-r N"
        publishDir = [
            path: { "${params.outdir}/${meta.id}/10_Consensus" },
            mode: params.publish_dir_mode,
            pattern: "*.{fasta}"
        ]
        ext.prefix = { "${meta.id}.${meta.selected_ref}.medaka" }
    }

    /*
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
        General config parameters
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    */

    withName: 'PLOT_MOSDEPTH_REGIONS_RSVA' {
        publishDir = [
            path: { "${params.outdir}/amplicon_coverage_RSV_A_samples" },
            mode: params.publish_dir_mode,
            pattern: "*.{pdf,tsv}"
        ]
        ext.prefix = { "RSV_A_samples.amplicons_coverage" }
    }

    withName: 'PLOT_MOSDEPTH_REGIONS_RSVB' {
        publishDir = [
            path: { "${params.outdir}/amplicon_coverage_RSV_B_samples" },
            mode: params.publish_dir_mode,
            pattern: "*.{pdf,tsv}"
        ]
        ext.prefix = { "RSV_B_samples.amplicons_coverage" }
    }

    withName: 'FASTA_AGGREGATION_RSVA' {
        publishDir = [
            path: { "${params.outdir}" },
            mode: params.publish_dir_mode,
            pattern: "*.{fa}"
        ]
        ext.prefix = { "RSV-A_samples.consensus.fa" }
    }

    withName: 'FASTA_AGGREGATION_RSVB' {
        publishDir = [
            path: { "${params.outdir}" },
            mode: params.publish_dir_mode,
            pattern: "*.{fa}"
        ]
        ext.prefix = { "RSV-B_samples.consensus.fa" }
    }

    withName: 'MULTIQC' {
        ext.args   = { params.multiqc_title ? "--title \"$params.multiqc_title\"" : '' }
        publishDir = [
            path: { "${params.outdir}/multiqc" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

}
